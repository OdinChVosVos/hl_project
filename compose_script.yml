version: '4.5'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile_app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_SHOW_SQL=${JPA_SHOW_SQL:-false}
      - SERVER_TOMCAT_MAX_THREADS=${TOMCAT_MAX_THREADS:-200}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    cpus: "2.0"
    mem_limit: 512m

  db:
    image: 'postgres:15.4-alpine3.18'
    container_name: ${POSTGRES_HOST}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: